stages:
  - build
  - test
  - deploy

variables:
  DOCKER_IMAGE_BASE: "${CI_REGISTRY_IMAGE}/unittest:php"

build:php-8.0:
  stage: build
  variables:
    PHP_VERSION: "8.0"
    COMPOSER_VERSION: "latest"
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:dind
      alias: docker
  script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - docker login -u "${CI_DEPENDENCY_PROXY_USER}" -p "${CI_DEPENDENCY_PROXY_PASSWORD}" "${CI_DEPENDENCY_PROXY_SERVER}"
    - docker pull     "${DOCKER_IMAGE_BASE}-${PHP_VERSION}" || true
    - docker build -t "${DOCKER_IMAGE_BASE}-${PHP_VERSION}" --build-arg CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX --build-arg PHP_VERSION --build-arg COMPOSER_VERSION .
    - docker push     "${DOCKER_IMAGE_BASE}-${PHP_VERSION}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfile
      when: always
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - .gitlab-ci.yml
      when: manual

build:php-8.2:
  stage: build
  variables:
    PHP_VERSION: "8.2"
    COMPOSER_VERSION: "latest"
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:dind
      alias: docker
  script:
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_JOB_TOKEN}" "${CI_REGISTRY}"
    - docker login -u "${CI_DEPENDENCY_PROXY_USER}" -p "${CI_DEPENDENCY_PROXY_PASSWORD}" "${CI_DEPENDENCY_PROXY_SERVER}"
    - docker pull     "${DOCKER_IMAGE_BASE}-${PHP_VERSION}" || true
    - docker build -t "${DOCKER_IMAGE_BASE}-${PHP_VERSION}" --build-arg CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX --build-arg PHP_VERSION --build-arg COMPOSER_VERSION .
    - docker push     "${DOCKER_IMAGE_BASE}-${PHP_VERSION}"
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - Dockerfile
      when: always
    - if: $CI_PIPELINE_SOURCE == "push"
      changes:
        - .gitlab-ci.yml
      when: manual

unittest:php-8.0:
  stage: test
  image: "${DOCKER_IMAGE_BASE}-8.0"
  script:
    - composer install
    - composer test

unittest:php-8.2:
  stage: test
  image: "${DOCKER_IMAGE_BASE}-8.2"
  script:
    - composer install
    - composer test

phpstan:php-8.2:
  stage: test
  image: "${DOCKER_IMAGE_BASE}-8.2"
  script:
    - composer install
    - vendor/bin/phpstan

publish:
  image: curlimages/curl:latest
  stage: deploy
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    - if [ $code -eq 201 ]; then
      echo "Package created - Code $code - $body";
      else
      echo "Could not create package - Code $code - $body";
      exit 1;
      fi
